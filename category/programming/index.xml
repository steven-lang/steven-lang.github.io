<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming | Steven Lang</title><link>/category/programming/</link><atom:link href="/category/programming/index.xml" rel="self" type="application/rss+xml"/><description>programming</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Fri, 02 Jul 2021 08:28:18 +0200</lastBuildDate><image><url>/media/icon_huf1725902143bd66c6a890a187df1c0a9_21253_512x512_fill_lanczos_center_2.png</url><title>programming</title><link>/category/programming/</link></image><item><title>arxiv-downloader: The arXiv PDF Command-Line Interface Downloader</title><link>/post/2021-07-02-arxiv-downloader/</link><pubDate>Fri, 02 Jul 2021 08:28:18 +0200</pubDate><guid>/post/2021-07-02-arxiv-downloader/</guid><description>&lt;h1 id="the-hassle-of-downloading-arxiv-papers">The hassle of Downloading arXiv Papers&lt;/h1>
&lt;p>A few months ago I had acquired a tablet to read and annotate research papers wherever I want, stopping the waste of printing these in paper form and then keeping the annotated printed versions somewhere in my desk. This led me to a setup in which I store all research papers in some directory structure at &lt;code>~/papers/&lt;/code> and have this directory be in sync with a synchronization service; currently OneDrive, which has an excellent third-party &lt;a href="https://github.com/abraunegg/onedrive" target="_blank" rel="noopener">Linux client&lt;/a>.&lt;/p>
&lt;p>Many of the papers I find are hosted on &lt;a href="https://arxiv.org/" target="_blank" rel="noopener">arXiv.org&lt;/a>. When I&amp;rsquo;ve got a paper which I&amp;rsquo;d like to read, e.g. &lt;a href="https://arxiv.org/abs/2107.00630" target="_blank" rel="noopener">Variational Diffusion Models&lt;/a>, I first have to manually download the paper into some location. By default, this results in a file named after the arXiv paper &lt;code>id&lt;/code>, e.g. &lt;code>2107.00630.pdf&lt;/code>, which is annoying as the &lt;code>id&lt;/code> is hard to associate with the actual paper title. Therefore, I usually rename the paper according to its title:&lt;/p>
&lt;pre>&lt;code class="language-sh">mv 2107.00630.pdf ~/papers/generative-models/2107.00630v1.Variational_Diffusion_Models.pdf
&lt;/code>&lt;/pre>
&lt;p>Now the paper is ready to be automatically synced and I can find it on my tablet device. After repeating the above multiple times, I was especially annoyed by the file renaming necessity. Furthermore, it also happens that I often simply have the arXiv link and know that I want to have this paper on my tablet. I&amp;rsquo;m an avid Linux user and work from the terminal most of the time. Hence, it was natural to write a command-line tool that takes an arXiv link/id, downloads it into a preferred directory, and automatically renames the filename according to the title. This is when I came up with a simple tool called &lt;a href="https://github.com/steven-lang/arxiv-downloader" target="_blank" rel="noopener">arxiv-downloader&lt;/a>, wrapping the neat arXiv Python wrapper &lt;a href="https://github.com/lukasschwab/arxiv.py" target="_blank" rel="noopener">lukasschwab/arxiv.py&lt;/a>.&lt;/p>
&lt;h1 id="the-solution-arxiv-downloader">The Solution: arxiv-downloader&lt;/h1>
&lt;p>This little tool is available on PyPi (&lt;code>pip install arxiv-downloader&lt;/code>) and offers the &lt;code>arxiv-downloader&lt;/code> script in the command-line:&lt;/p>
&lt;pre>&lt;code class="language-sh">$ arxiv-downloader --url https://arxiv.org/abs/2107.00630 --directory ~/papers/generative-models/
Directory /home/steven/papers/generative-models/ does not exist. Create? [y/n] y
Starting download of article: &amp;quot;Variational Diffusion Models&amp;quot; (2107.00630)
Download finished! Result saved at:
/home/steven/papers/generative-models/2107.00630v1.Variational_Diffusion_Models.pdf
&lt;/code>&lt;/pre>
&lt;p>This merges the sequence of opening an arXiv link, manually downloading the PDF, renaming this PDF according to the paper title, and moving the file to the final location, into a single command. Although this might only save me about half a minute for every paper, I deeply felt the need to automate these steps. If you&amp;rsquo;re a computer scientist or programmer, I hope you can relate; if not then just call me crazy :-).&lt;/p>
&lt;p>You can check out all available arguments with &lt;code>arxiv-downloader -h&lt;/code>&lt;/p>
&lt;pre>&lt;code class="language-sh">$ arxiv-downloader -h
usage: arxiv-downloader [-h] [--url URL] [--id ID] [--directory DIRECTORY] [--source]
arXiv Paper Downloader.
optional arguments:
-h, --help show this help message and exit
--url URL, -u URL arXiv article URL.
--id ID, -i ID arXiv article ID (for https://arxiv.org/abs/2004.13316 this would be
2004.13316).
--directory DIRECTORY, -d DIRECTORY
Output directory.
--source, -s Whether to download the source tar file.
&lt;/code>&lt;/pre>
&lt;p>The source code is available at &lt;a href="https://github.com/steven-lang/arxiv-downloader" target="_blank" rel="noopener">steven-lang/arxiv-downloader&lt;/a>. Feel free to contribute, leave feedback, and report issues.&lt;/p></description></item></channel></rss>