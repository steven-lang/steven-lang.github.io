<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Mining | Steven Lang</title>
    <link>/tag/data-mining/</link>
      <atom:link href="/tag/data-mining/index.xml" rel="self" type="application/rss+xml" />
    <description>Data Mining</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 25 Apr 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_2.png</url>
      <title>Data Mining</title>
      <link>/tag/data-mining/</link>
    </image>
    
    <item>
      <title>Edward - Deep Probabilistic Programming</title>
      <link>/project/deep-probabilistic-programming-edward/</link>
      <pubDate>Sat, 25 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/project/deep-probabilistic-programming-edward/</guid>
      <description>&lt;p&gt;Write-up and presentation during the Extended Machine Learning Seminar at TU Darmstadt about the Edward deep probabilistic programming language.&lt;/p&gt;
&lt;h3 id=&#34;abstract&#34;&gt;Abstract&lt;/h3&gt;
&lt;p&gt;Probabilistic programming is the approach to adopt probabilistic models and
inference as first class citizens of a programming language. Its main goal is
lowering the entry barrier into the field of probabilistic modeling and allow
easier and faster prototyping in research.&lt;/p&gt;
&lt;p&gt;In recent years, a new class of these languages has risen: Deep probabilistic
programming languages. Their focus is on unifying probabilistic programming
languages with the modeling power, efficiency and composability of deep neural
networks in the field of machine learning. We focus on Edward, a Turing-complete
deep probabilistic programming language, and compare it to prior, as well as
future work. Edward makes probabilistic programming as flexible and
computationally efficient as deep learning and allows for rich compositions of
probabilistic models and inference procedures.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Java Matrix Algorithms Library</title>
      <link>/project/matrix-algorithms-java/</link>
      <pubDate>Tue, 02 Jan 2018 00:00:00 +0000</pubDate>
      <guid>/project/matrix-algorithms-java/</guid>
      <description>&lt;p&gt;Developed together with &lt;a href=&#34;https://www.cms.waikato.ac.nz/~fracpete/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Peter Reutemann&lt;/a&gt; at the University of Waikato (New Zealand)&lt;/p&gt;
&lt;h2 id=&#34;algorithms&#34;&gt;Algorithms&lt;/h2&gt;
&lt;p&gt;Unsupervised:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20160630035830/http://statmaster.sdu.dk:80/courses/ST02/module05/module.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Principal Component Analysis (PCA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.eigenvector.com/index.php?title=Advanced_Preprocessing:_Multivariate_Filtering#GLSW_Algorithm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Generalized Least Squares Weighting (GLSW)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.eigenvector.com/index.php?title=Advanced_Preprocessing:_Multivariate_Filtering#External_Parameter_Orthogonalization_.28EPO.29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;External Parameter Orthogonalization (EPO)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cs.helsinki.fi/u/ahyvarin/papers/bookfinal_ICA.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Independent Component Analysis (FastICA)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Supervised:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20081001154431/http://statmaster.sdu.dk:80/courses/ST02/module07/module.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Partial Least Squares (PLS1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.statsoft.com/textbook/partial-least-squares/#SIMPLS&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Simple PLS (SIMPLS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.plantbreeding.wzw.tum.de/fileadmin/w00bdb/www/kraemer/icml_kernelpls.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kernel PLS (KernelPLS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.r-bloggers.com/evaluation-of-orthogonal-signal-correction-for-pls-modeling-osc-pls-and-opls/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Orthogonal Signal Correction (OPLS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.statsoft.com/textbook/partial-least-squares/#NIPALS&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nonlinear Iterative PLS (NIPALS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2810828/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sparse PLS (SparsePLS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.eigenvector.com/index.php?title=Advanced_Preprocessing:_Multivariate_Filtering#GLSW_Algorithm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Y Gradient based Generalized Least Squares Weighting (YGradientGLSW)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.eigenvector.com/index.php?title=Advanced_Preprocessing:_Multivariate_Filtering#External_Parameter_Orthogonalization_.28EPO.29&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Y Gradient based External Parameter Orthogonalization (YGradientEPO)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.30.16&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Canonical Correlation Analysis (CCA)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pubs.acs.org/doi/10.1021/acs.analchem.8b00498&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Domain Invariant PLS (DIPLS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://or.nsfc.gov.cn/bitstream/00001903-5/485833/1/1000013952154.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Variance Constrained PLS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sciencedirect.com/science/article/pii/S0169743998001099&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Orthogonal Signal Correction (OSC)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mining of Massive Datasets</title>
      <link>/project/dm-seminar/</link>
      <pubDate>Mon, 27 Apr 2015 00:00:00 +0000</pubDate>
      <guid>/project/dm-seminar/</guid>
      <description>&lt;h3 id=&#34;abstract&#34;&gt;Abstract&lt;/h3&gt;
&lt;p&gt;This report is orientated towards the book Mining of Massive Datasets [6] and describes two novel frameworks for efficient massive data analysis on compute clusters. A short introduction to compute clusters and a distributed file system will build the base for MapReduce. After showing a few examples of applications and optimizations, the disadvantages are listed and lead to the second framework, called Spark, which captures on these drawbacks. The report shows that Spark outperforms the MapReduce implementation Hadoop at iterative tasks with working sets.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
